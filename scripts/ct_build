#!/usr/bin/env bash
#ALWAYS SAME INITIALIZATION 
set -e
if [[ -z "${DIR_CT}" ]]; then 
    echo 'Make sure to source /workspace/env before calling this script.'
    exit 1
fi
source $DIR_CT/scripts/ct_init


sudo rm -f /usr/local/bin/crystaltools
sudo rm -f /opt/homebrew/bin/crystaltools
sudo rm -f /usr/local/bin/publishtools
sudo rm -f /opt/homebrew/bin/publishtools

#get the crystal libs
cl_build

git_get github.com/freeflowuniverse crystaltools
pushd $CDIR/crystaltools 2>&1 >> /dev/null

# v -gc boehm -prod crystaltools.v
echo " - COMPILE3"
#-cc clang
if [[ "$OSTYPE" == "darwin"* ]]; then
    # v -d static_boehm  -gc boehm -prod crystaltools.v
    v -d net_blocking_sockets -d static_boehm  -gc boehm crystaltools.v
else
    # v -d static_boehm  -gc boehm -cflags -static -prod crystaltools.v
    # v -d static_boehm  -gc boehm -cflags -static crystaltools.v
    # v -d static_boehm -cc gcc -cg  -gc boehm  crystaltools.v
    # v -cflags "-lpthread" -cc gcc -cg  -gc boehm  crystaltools.v
    v  -gc boehm crystaltools.v
fi
echo "DONE"
   
if [[ "$OSTYPE" == "darwin"* ]]; then
    if [[ `uname -m` == 'arm64' ]]; then
        sudo cp crystaltools /opt/homebrew/bin/crystaltools
        sudo chmod 770 /opt/homebrew/bin/crystaltools
        #to prepare for upload to our releases
        cp crystaltools ~/Downloads/crystaltools_osx_arm
    else        
        sudo cp ct /usr/local/bin/crystaltools
        sudo chmod 770 /usr/local/bin/crystaltools    
        #to prepare for upload to our releases
        cp crystaltools ~/Downloads/crystaltools_osx
    fi
else
    #for linux
    sudo cp crystaltools /usr/local/bin/crystaltools
    sudo chmod 777 /usr/local/bin/crystaltools
    cp crystaltools crystaltools_linux
    
fi

sudo cp crystaltools /usr/local/bin/ct



popd "$@" > /dev/null

echo " - crystaltools build ok"
name: publishtools_build_release
on:
  push:
    branches:
      - "development"
      - "master"
  workflow_dispatch:

jobs:
  Build-Release-PublishTools:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref_name }} and your repository is ${{ github.repository }}."

      - name: Install dependencies
        run: sudo apt install -y libgc-dev tmux mc git rsync curl

      - name: Setup Vlang
        uses: vlang/setup-v@v1
        with:
          check-latest: true

      - name: Check out repository code
        uses: actions/checkout@v3

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - name: Install crystallib
        run: v install despiegk.crystallib

      - name: Build publishtools
        run: |
          cd crystaltools
          v -no-parallel -d net_blocking_sockets -d static_boehm  -g -keepc -gc boehm publishtools.v
          sudo mv publishtools /usr/local/bin
          sudo chmod u+x /usr/local/bin/publishtools

      - name: get previous tag version
        id: previous_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.1

      - name: get new release version for development
        if: ${{ github.ref_name == 'development' }}
        id: feature_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.previous_tag.outputs.tag }}
          version-fragment: "feature"

      - name: get new release version for master
        if: ${{ github.ref_name == 'master' }}
        id: major_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.previous_tag.outputs.tag }}
          version-fragment: "major"

      - name: Feature Release for publishtools
        if: ${{ github.ref_name == 'development' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.feature_version.outputs.next-version }}
          generate_release_notes: true
          files: /usr/local/bin/publishtools

      - name: Major Release for publishtools
        if: ${{ github.ref_name == 'master' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.major_version.outputs.next-version }}
          generate_release_notes: true
          files: /usr/local/bin/publishtools

      - name: Print Status
        run: echo "🍏 This job's status is ${{ job.status }}."
